{"ast":null,"code":"import axios from 'axios';\nimport AxiosMockAdapter from 'axios-mock-adapter';\nimport React from \"react\";\nconst instance = new AxiosMockAdapter(axios, {\n  delayResponse: 2000\n}); // instance.onGet('/pizza/all').reply(200, {\n//     veg: [\n//         {\n//             name: 'Batman Pizza',\n//             crust: 'Thin',\n//             cheese: 'Burst',\n//             price: '300.00',\n//             image: \"/pizzaveg1.jpg\"\n//         },\n//         {\n//             name: 'Iron Man Pizza',\n//             crust: 'Regular',\n//             cheese: 'Burst',\n//             price: '500.00',\n//             image: \"/pizzaveg1.jpg\"\n//         },\n//         {\n//             name: 'Thor Pizza',\n//             crust: 'Flat Bread',\n//             cheese: 'Topping',\n//             price: '200.00',\n//             image: \"/pizzaveg1.jpg\"\n//         },\n//         {\n//             name: 'Rainy Pizza',\n//             crust: 'Multigrain',\n//             cheese: 'No',\n//             price: '500.00',\n//             image: \"/pizzaveg1.jpg\"\n//         },\n//     ],\n//     nonVeg: [\n//         {\n//             name: 'Loki Pizza',\n//             crust: 'Thin',\n//             cheese: 'Burst',\n//             price: '600.00',\n//             image: \"/nonveg.jpg\"\n//         },\n//         {\n//             name: 'Thanos Pizza',\n//             crust: 'Regular',\n//             cheese: 'Burst',\n//             price: '500.00',\n//             image: \"/nonveg.jpg\"\n//         },\n//         {\n//             name: 'Nazi Pizza',\n//             crust: 'Flat Bread',\n//             cheese: 'Topping',\n//             price: '200.00',\n//             image: \"/nonveg.jpg\"\n//         },\n//     ],\n// });\n\nconsole.log(instance);\ninstance.onGet(\"/pizza/all\", {\n  params: {\n    crust: \"thin\"\n  }\n}).reply(200, {\n  veg: [{\n    name: 'Batman Pizza',\n    crust: 'Thin',\n    cheese: 'Burst',\n    price: '300.00',\n    image: \"/pizzaveg1.jpg\"\n  }],\n  nonVeg: [{\n    name: 'Loki Pizza',\n    crust: 'Thin',\n    cheese: 'Burst',\n    price: '600.00',\n    image: \"/nonveg.jpg\"\n  }]\n});","map":{"version":3,"sources":["/Users/kshitijkapure/WebstormProjects/pizza/src/Mock/PizzaMock.js"],"names":["axios","AxiosMockAdapter","React","instance","delayResponse","console","log","onGet","params","crust","reply","veg","name","cheese","price","image","nonVeg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,IAAIF,gBAAJ,CAAqBD,KAArB,EAA4B;AAAEI,EAAAA,aAAa,EAAE;AAAjB,CAA5B,CAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAA,QAAQ,CAACI,KAAT,CAAe,YAAf,EAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT;AAAV,CAA7B,EAA4DC,KAA5D,CAAkE,GAAlE,EAAuE;AACnEC,EAAAA,GAAG,EAAE,CACD;AACIC,IAAAA,IAAI,EAAE,cADV;AAEIH,IAAAA,KAAK,EAAE,MAFX;AAGII,IAAAA,MAAM,EAAE,OAHZ;AAIIC,IAAAA,KAAK,EAAE,QAJX;AAKIC,IAAAA,KAAK,EAAE;AALX,GADC,CAD8D;AAUnEC,EAAAA,MAAM,EAAE,CACJ;AACIJ,IAAAA,IAAI,EAAE,YADV;AAEIH,IAAAA,KAAK,EAAE,MAFX;AAGII,IAAAA,MAAM,EAAE,OAHZ;AAIIC,IAAAA,KAAK,EAAE,QAJX;AAKIC,IAAAA,KAAK,EAAE;AALX,GADI;AAV2D,CAAvE","sourcesContent":["import axios from 'axios'\n\nimport AxiosMockAdapter from 'axios-mock-adapter';\nimport React from \"react\";\n\nconst instance = new AxiosMockAdapter(axios, { delayResponse: 2000 });\n\n// instance.onGet('/pizza/all').reply(200, {\n//     veg: [\n//         {\n//             name: 'Batman Pizza',\n//             crust: 'Thin',\n//             cheese: 'Burst',\n//             price: '300.00',\n//             image: \"/pizzaveg1.jpg\"\n//         },\n//         {\n//             name: 'Iron Man Pizza',\n//             crust: 'Regular',\n//             cheese: 'Burst',\n//             price: '500.00',\n//             image: \"/pizzaveg1.jpg\"\n//         },\n//         {\n//             name: 'Thor Pizza',\n//             crust: 'Flat Bread',\n//             cheese: 'Topping',\n//             price: '200.00',\n//             image: \"/pizzaveg1.jpg\"\n//         },\n//         {\n//             name: 'Rainy Pizza',\n//             crust: 'Multigrain',\n//             cheese: 'No',\n//             price: '500.00',\n//             image: \"/pizzaveg1.jpg\"\n//         },\n//     ],\n//     nonVeg: [\n//         {\n//             name: 'Loki Pizza',\n//             crust: 'Thin',\n//             cheese: 'Burst',\n//             price: '600.00',\n//             image: \"/nonveg.jpg\"\n//         },\n//         {\n//             name: 'Thanos Pizza',\n//             crust: 'Regular',\n//             cheese: 'Burst',\n//             price: '500.00',\n//             image: \"/nonveg.jpg\"\n//         },\n//         {\n//             name: 'Nazi Pizza',\n//             crust: 'Flat Bread',\n//             cheese: 'Topping',\n//             price: '200.00',\n//             image: \"/nonveg.jpg\"\n//         },\n//     ],\n// });\n\nconsole.log(instance);\ninstance.onGet(\"/pizza/all\", { params: { crust: \"thin\" } }).reply(200, {\n    veg: [\n        {\n            name: 'Batman Pizza',\n            crust: 'Thin',\n            cheese: 'Burst',\n            price: '300.00',\n            image: \"/pizzaveg1.jpg\"\n        },\n    ],\n    nonVeg: [\n        {\n            name: 'Loki Pizza',\n            crust: 'Thin',\n            cheese: 'Burst',\n            price: '600.00',\n            image: \"/nonveg.jpg\"\n        },\n    ],\n});\n"]},"metadata":{},"sourceType":"module"}